var search_data = {"index":{"searchIndex":["plaid","apierror","accesstoken","accounts","auth","balance","bankaccounttoken","categories","client","credentials","creditdetails","error","identity","income","institutions","invalidinputerror","invalidrequesterror","item","itemerror","middleware","plaidapierror","plaiderror","plaidservererror","processor","publictoken","ratelimitexceedederror","sandbox","sandboxitem","stripe","transactions","webhook","access_token()","accounts()","api_host()","auth()","balance()","bank_account_token()","build_default_connection()","categories()","convert_to_date_string()","create()","create()","create()","create_connection()","credentials()","credit_details()","delete()","error_from_type()","exchange()","get()","get()","get()","get()","get()","get()","get()","get()","get()","get()","get_by_id()","identity()","income()","institutions()","invalidate()","item()","mfa()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","on_complete()","post()","post_with_auth()","post_with_public_key()","processor()","public_token()","remove()","reset_login()","sandbox()","sandbox_item()","search()","stripe()","transactions()","update()","update()","update_version()","webhook()","license","readme"],"longSearchIndex":["plaid","plaid::apierror","plaid::accesstoken","plaid::accounts","plaid::auth","plaid::balance","plaid::bankaccounttoken","plaid::categories","plaid::client","plaid::credentials","plaid::creditdetails","plaid::error","plaid::identity","plaid::income","plaid::institutions","plaid::invalidinputerror","plaid::invalidrequesterror","plaid::item","plaid::itemerror","plaid::middleware","plaid::plaidapierror","plaid::plaiderror","plaid::plaidservererror","plaid::processor","plaid::publictoken","plaid::ratelimitexceedederror","plaid::sandbox","plaid::sandboxitem","plaid::stripe","plaid::transactions","plaid::webhook","plaid::item#access_token()","plaid::client#accounts()","plaid::client#api_host()","plaid::client#auth()","plaid::accounts#balance()","plaid::stripe#bank_account_token()","plaid::client#build_default_connection()","plaid::client#categories()","plaid::convert_to_date_string()","plaid::bankaccounttoken#create()","plaid::item#create()","plaid::publictoken#create()","plaid::client#create_connection()","plaid::item#credentials()","plaid::client#credit_details()","plaid::item#delete()","plaid::error::error_from_type()","plaid::publictoken#exchange()","plaid::accounts#get()","plaid::auth#get()","plaid::balance#get()","plaid::categories#get()","plaid::creditdetails#get()","plaid::identity#get()","plaid::income#get()","plaid::institutions#get()","plaid::item#get()","plaid::transactions#get()","plaid::institutions#get_by_id()","plaid::client#identity()","plaid::client#income()","plaid::client#institutions()","plaid::accesstoken#invalidate()","plaid::client#item()","plaid::item#mfa()","plaid::accesstoken::new()","plaid::accounts::new()","plaid::auth::new()","plaid::balance::new()","plaid::bankaccounttoken::new()","plaid::categories::new()","plaid::client::new()","plaid::credentials::new()","plaid::creditdetails::new()","plaid::identity::new()","plaid::income::new()","plaid::institutions::new()","plaid::item::new()","plaid::plaidapierror::new()","plaid::processor::new()","plaid::publictoken::new()","plaid::sandbox::new()","plaid::sandboxitem::new()","plaid::stripe::new()","plaid::transactions::new()","plaid::webhook::new()","plaid::middleware#on_complete()","plaid::client#post()","plaid::client#post_with_auth()","plaid::client#post_with_public_key()","plaid::client#processor()","plaid::item#public_token()","plaid::item#remove()","plaid::sandboxitem#reset_login()","plaid::client#sandbox()","plaid::sandbox#sandbox_item()","plaid::institutions#search()","plaid::processor#stripe()","plaid::client#transactions()","plaid::credentials#update()","plaid::webhook#update()","plaid::accesstoken#update_version()","plaid::item#webhook()","",""],"info":[["Plaid","","classes/Plaid.html","","<p>The Plaid namespace.\n"],["Plaid::APIError","","classes/Plaid/APIError.html","","<p>returned during planned maintenance windows and in response to API internal\nserver errors.\n"],["Plaid::AccessToken","","classes/Plaid/AccessToken.html","","<p>Class used to call the AccessToken sub-product.\n"],["Plaid::Accounts","","classes/Plaid/Accounts.html","","<p>Class used to call the Accounts product.\n"],["Plaid::Auth","","classes/Plaid/Auth.html","","<p>Class used to call the Auth product.\n"],["Plaid::Balance","","classes/Plaid/Balance.html","","<p>Class used to call the Balance product.\n"],["Plaid::BankAccountToken","","classes/Plaid/BankAccountToken.html","","<p>Class used to call the BankAccountToken sub-product.\n"],["Plaid::Categories","","classes/Plaid/Categories.html","","<p>Class used to call the Categories product.\n"],["Plaid::Client","","classes/Plaid/Client.html","","<p>The main interface to Plaid API.\n"],["Plaid::Credentials","","classes/Plaid/Credentials.html","","<p>Class used to call the Credentials sub-product.\n"],["Plaid::CreditDetails","","classes/Plaid/CreditDetails.html","","<p>Class used to call the CreditDetails product.\n"],["Plaid::Error","","classes/Plaid/Error.html","","<p>A module that provides utilities for errors.\n"],["Plaid::Identity","","classes/Plaid/Identity.html","","<p>Class used to call the Identity product.\n"],["Plaid::Income","","classes/Plaid/Income.html","","<p>Class used to call the Income product.\n"],["Plaid::Institutions","","classes/Plaid/Institutions.html","","<p>Class used to call the Institutions product.\n"],["Plaid::InvalidInputError","","classes/Plaid/InvalidInputError.html","","<p>returned when all fields are provided and are in the correct format, but\nthe values provided are incorrect …\n"],["Plaid::InvalidRequestError","","classes/Plaid/InvalidRequestError.html","","<p>returned when the request is malformed and cannot be processed.\n"],["Plaid::Item","","classes/Plaid/Item.html","","<p>Class used to call the Item product.\n"],["Plaid::ItemError","","classes/Plaid/ItemError.html","","<p>indicates that information provided for the item (such as credentials or\nMFA) may be invalid or that …\n"],["Plaid::Middleware","","classes/Plaid/Middleware.html","",""],["Plaid::PlaidAPIError","","classes/Plaid/PlaidAPIError.html","","<p>Base class for any error returned by the API\n"],["Plaid::PlaidError","","classes/Plaid/PlaidError.html","","<p>Base class for Plaid SDK errors\n"],["Plaid::PlaidServerError","","classes/Plaid/PlaidServerError.html","","<p>returned on Plaid server or network issues\n"],["Plaid::Processor","","classes/Plaid/Processor.html","","<p>Class used to call the Processor product.\n"],["Plaid::PublicToken","","classes/Plaid/PublicToken.html","","<p>Class used to call the PublicToken sub-product\n"],["Plaid::RateLimitExceededError","","classes/Plaid/RateLimitExceededError.html","","<p>returned when the request is valid but has exceeded established rate\nlimits.\n"],["Plaid::Sandbox","","classes/Plaid/Sandbox.html","","<p>Class used to call the Sandbox product.\n"],["Plaid::SandboxItem","","classes/Plaid/SandboxItem.html","","<p>Class used to call the SandboxItem sub-product.\n"],["Plaid::Stripe","","classes/Plaid/Stripe.html","","<p>Class used to call the Stripe sub-product.\n"],["Plaid::Transactions","","classes/Plaid/Transactions.html","","<p>Class used to call the Transactions product.\n"],["Plaid::Webhook","","classes/Plaid/Webhook.html","","<p>Class used to call the Webhook sub-product\n"],["access_token","Plaid::Item","classes/Plaid/Item.html#method-i-access_token","()","<p>Memoized class instance to make requests from Plaid::AccessToken\n"],["accounts","Plaid::Client","classes/Plaid/Client.html#method-i-accounts","()","<p>Memoized class instance to make requests from Plaid::Account\n"],["api_host","Plaid::Client","classes/Plaid/Client.html#method-i-api_host","()","<p>Gets the API hostname for given environment.\n<p>env &mdash; The Symbol (:sandbox, :development, :production)\n\n<p>Returns …\n"],["auth","Plaid::Client","classes/Plaid/Client.html#method-i-auth","()","<p>Memoized class instance to make requests from Plaid::Auth\n"],["balance","Plaid::Accounts","classes/Plaid/Accounts.html#method-i-balance","()","<p>Memoized class instance to make requests from Plaid::Balance\n"],["bank_account_token","Plaid::Stripe","classes/Plaid/Stripe.html#method-i-bank_account_token","()","<p>Memoized class instance to make requests from Plaid::BankAccountToken\n"],["build_default_connection","Plaid::Client","classes/Plaid/Client.html#method-i-build_default_connection","(builder)","<p>Set Plaid defaults on the Faraday connection.\n<p>builder &mdash; The Faraday builder object.\n\n"],["categories","Plaid::Client","classes/Plaid/Client.html#method-i-categories","()","<p>Memoized class instance to make requests from Plaid::Categories\n"],["convert_to_date_string","Plaid","classes/Plaid.html#method-c-convert_to_date_string","(date)","<p>Converts date objects to strings if needed\n<p>Takes in a string or a Date object and performs necessary operations …\n"],["create","Plaid::BankAccountToken","classes/Plaid/BankAccountToken.html#method-i-create","(access_token, account_id)","<p>Creates a Stripe bank account token from an access_token.\n<p>Does a POST /processor/stripe/bank_account_token/create …\n"],["create","Plaid::Item","classes/Plaid/Item.html#method-i-create","(credentials:, institution_id:, initial_products:, transactions_start_date: nil, transactions_end_date: nil, transactions_await_results: nil, webhook: nil, options: nil)","<p>Creates an item.\n<p>Does a POST /item/create call which attemps to create a new item for you\npossibly returning …\n"],["create","Plaid::PublicToken","classes/Plaid/PublicToken.html#method-i-create","(access_token)","<p>Creates a public token from an access_token.\n<p>Does a POST /item/public_token/create call which can be used …\n"],["create_connection","Plaid::Client","classes/Plaid/Client.html#method-i-create_connection","(&block)","<p>Initializes a new Plaid connection object via Faraday.\n<p>Optionally takes a block to allow overriding the …\n"],["credentials","Plaid::Item","classes/Plaid/Item.html#method-i-credentials","()","<p>Memoized class instance to make requests from Plaid::Credentials\n"],["credit_details","Plaid::Client","classes/Plaid/Client.html#method-i-credit_details","()","<p>Memoized class instance to make requests from Plaid::CreditDetails\n"],["delete","Plaid::Item","classes/Plaid/Item.html#method-i-delete","(access_token)","<p>Deletes an item\n<p>Does a POST /item/delete call which is used to delete an item\n<p>access_token &mdash; access_token …\n"],["error_from_type","Plaid::Error","classes/Plaid/Error.html#method-c-error_from_type","(error_type)","<p>Map error_type to PlaidAPIError\n<p>Maps an error_type from an error HTTP response to an actual PlaidAPIError …\n"],["exchange","Plaid::PublicToken","classes/Plaid/PublicToken.html#method-i-exchange","(public_token)","<p>Exchange a public token for an access_token\n<p>Does a POST /item/public_token/exchange call helps you exchange …\n"],["get","Plaid::Accounts","classes/Plaid/Accounts.html#method-i-get","(access_token, account_ids: nil, options: nil)","<p>Get information about all available accounts.\n<p>Does a POST /accounts/get call to retrieve high level account …\n"],["get","Plaid::Auth","classes/Plaid/Auth.html#method-i-get","(access_token, account_ids: nil, options: nil)","<p>Get information about account and routing numbers for checking and savings\naccounts\n<p>Does a POST /auth/get …\n"],["get","Plaid::Balance","classes/Plaid/Balance.html#method-i-get","(access_token, account_ids: nil, options: nil)","<p>Get information about all available balances.\n<p>Does a POST /accounts/balance/get call to get real-time …\n"],["get","Plaid::Categories","classes/Plaid/Categories.html#method-i-get","()","<p>Get information about all Plaid categories\n<p>Does a POST /categories/get call to retrieve a list of all …\n"],["get","Plaid::CreditDetails","classes/Plaid/CreditDetails.html#method-i-get","(access_token, account_ids: nil)","<p>Get information about all available credit_details\n<p>Does a POST /credit_details/get call which fetches …\n"],["get","Plaid::Identity","classes/Plaid/Identity.html#method-i-get","(access_token)","<p>Get Identity information\n<p>Does a POST /identity/get call to retrieve all info for a given\naccess_token …\n"],["get","Plaid::Income","classes/Plaid/Income.html#method-i-get","(access_token)","<p>Get information about user incomes\n<p>Does a POST /income/get call which returns income info for an access_tokeni\n…\n"],["get","Plaid::Institutions","classes/Plaid/Institutions.html#method-i-get","(count:, offset:, options: nil)","<p>Get information about Plaid institutions\n<p>Does a POST /institutions/get call pulls a list of supported …\n"],["get","Plaid::Item","classes/Plaid/Item.html#method-i-get","(access_token)","<p>Get information about an item\n<p>Does a POST /item/get call which returns information about an item or\nItemStatus …\n"],["get","Plaid::Transactions","classes/Plaid/Transactions.html#method-i-get","(access_token, start_date, end_date, account_ids: nil, count: nil, offset: nil, options: nil)","<p>Get information about transactions\n<p>Does a POST /transactions/get call which gives you high level account …\n"],["get_by_id","Plaid::Institutions","classes/Plaid/Institutions.html#method-i-get_by_id","(institution_id)","<p>Get information about a Plaid institution by ID\n<p>Does a POST /institutions/get_by_id call which allows …\n"],["identity","Plaid::Client","classes/Plaid/Client.html#method-i-identity","()","<p>Memoized class instance to make requests from Plaid::Identity\n"],["income","Plaid::Client","classes/Plaid/Client.html#method-i-income","()","<p>Memoized class instance to make requests from Plaid::Income\n"],["institutions","Plaid::Client","classes/Plaid/Client.html#method-i-institutions","()","<p>Memoized class instance to make requests from Plaid::Institutions\n"],["invalidate","Plaid::AccessToken","classes/Plaid/AccessToken.html#method-i-invalidate","(access_token)","<p>Rotate your access_token, keeping it attached to the item\n<p>Does a POST /item/access_token/invalidate call …\n"],["item","Plaid::Client","classes/Plaid/Client.html#method-i-item","()","<p>Memoized class instance to make requests from Plaid::Item\n"],["mfa","Plaid::Item","classes/Plaid/Item.html#method-i-mfa","(access_token, mfa_type, responses)","<p>Submit an MFA step.\n<p>Does a POST /item/mfa call which gives you the ability to response to an\nMFA\n<p>access_token … &mdash; "],["new","Plaid::AccessToken","classes/Plaid/AccessToken.html#method-c-new","(client)",""],["new","Plaid::Accounts","classes/Plaid/Accounts.html#method-c-new","(client)",""],["new","Plaid::Auth","classes/Plaid/Auth.html#method-c-new","(client)",""],["new","Plaid::Balance","classes/Plaid/Balance.html#method-c-new","(client)",""],["new","Plaid::BankAccountToken","classes/Plaid/BankAccountToken.html#method-c-new","(client)",""],["new","Plaid::Categories","classes/Plaid/Categories.html#method-c-new","(client)",""],["new","Plaid::Client","classes/Plaid/Client.html#method-c-new","(env:, client_id:, secret:, public_key:, &block)","<p>Construct a Client instance\n<p>Optionally takes a block to allow overriding the default Faraday connection\n…\n"],["new","Plaid::Credentials","classes/Plaid/Credentials.html#method-c-new","(client)",""],["new","Plaid::CreditDetails","classes/Plaid/CreditDetails.html#method-c-new","(client)",""],["new","Plaid::Identity","classes/Plaid/Identity.html#method-c-new","(client)",""],["new","Plaid::Income","classes/Plaid/Income.html#method-c-new","(client)",""],["new","Plaid::Institutions","classes/Plaid/Institutions.html#method-c-new","(client)",""],["new","Plaid::Item","classes/Plaid/Item.html#method-c-new","(client)",""],["new","Plaid::PlaidAPIError","classes/Plaid/PlaidAPIError.html#method-c-new","(error_type, error_code, error_message, display_message, request_id)","<p>Initialize an error with proper attributes\n<p>error_type &mdash; A broad categorization of the error\n<p>error_code &mdash; The …\n"],["new","Plaid::Processor","classes/Plaid/Processor.html#method-c-new","(client)",""],["new","Plaid::PublicToken","classes/Plaid/PublicToken.html#method-c-new","(client)",""],["new","Plaid::Sandbox","classes/Plaid/Sandbox.html#method-c-new","(client)",""],["new","Plaid::SandboxItem","classes/Plaid/SandboxItem.html#method-c-new","(client)",""],["new","Plaid::Stripe","classes/Plaid/Stripe.html#method-c-new","(client)",""],["new","Plaid::Transactions","classes/Plaid/Transactions.html#method-c-new","(client)",""],["new","Plaid::Webhook","classes/Plaid/Webhook.html#method-c-new","(client)",""],["on_complete","Plaid::Middleware","classes/Plaid/Middleware.html#method-i-on_complete","(env)",""],["post","Plaid::Client","classes/Plaid/Client.html#method-i-post","(path, payload)","<p>Make a post request\n<p>path &mdash; Path or URL to make the request to\n<p>payload &mdash; The payload or data to post\n"],["post_with_auth","Plaid::Client","classes/Plaid/Client.html#method-i-post_with_auth","(path, payload)","<p>Make a post request with appended authentication fields\n<p>path &mdash; Path or URL to make the request to\n<p>payload … &mdash; "],["post_with_public_key","Plaid::Client","classes/Plaid/Client.html#method-i-post_with_public_key","(path, payload)","<p>Make a post request with appended public key field.\n<p>path &mdash; Path or URL to make the request to.\n<p>payload &mdash; The …\n"],["processor","Plaid::Client","classes/Plaid/Client.html#method-i-processor","()","<p>Memoized class instance to make requests from Plaid::Processor\n"],["public_token","Plaid::Item","classes/Plaid/Item.html#method-i-public_token","()","<p>Memoized class instance to make requests from Plaid::PublicToken\n"],["remove","Plaid::Item","classes/Plaid/Item.html#method-i-remove","(access_token)","<p>Removes an item\n<p>Does a POST /item/remove call which is used to remove an item\n<p>access_token &mdash; access_token …\n"],["reset_login","Plaid::SandboxItem","classes/Plaid/SandboxItem.html#method-i-reset_login","(access_token)","<p>Resets sandbox item login\n<p>Does a POST /sandbox/item/reset_login call\n<p>access_token &mdash; access_token who&#39;s …\n"],["sandbox","Plaid::Client","classes/Plaid/Client.html#method-i-sandbox","()","<p>Memoized class instance to make requests from Plaid::Sandbox\n"],["sandbox_item","Plaid::Sandbox","classes/Plaid/Sandbox.html#method-i-sandbox_item","()","<p>Memoized class instance to make requests from Plaid::SandboxItem\n"],["search","Plaid::Institutions","classes/Plaid/Institutions.html#method-i-search","(query, products = nil)","<p>Get information about all available institutions matching your query\n<p>Does a POST /institutions/search …\n"],["stripe","Plaid::Processor","classes/Plaid/Processor.html#method-i-stripe","()","<p>Memoized class instance to make requests from Plaid::Stripe\n"],["transactions","Plaid::Client","classes/Plaid/Client.html#method-i-transactions","()","<p>Memoized class instance to make requests from Plaid::Transactions\n"],["update","Plaid::Credentials","classes/Plaid/Credentials.html#method-i-update","(access_token, credentials)","<p>Update credentials for an access_token.\n<p>Does a POST /item/credentials/update call which is used to update …\n"],["update","Plaid::Webhook","classes/Plaid/Webhook.html#method-i-update","(access_token, webhook)","<p>Update webhook for an access_token\n<p>Does a POST /item/webhook/update call which is used to update webhook …\n"],["update_version","Plaid::AccessToken","classes/Plaid/AccessToken.html#method-i-update_version","(access_token_v1)","<p>Generate a new API access_token for a legacy access_token\n<p>Does a POST /item/access_token/update_version …\n"],["webhook","Plaid::Item","classes/Plaid/Item.html#method-i-webhook","()","<p>Memoized class instance to make requests from Plaid::Webhook\n"],["LICENSE","","files/LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2017 Plaid Technologies, Inc.\n<p>Permission is hereby granted, free of …\n"],["README","","files/README_md.html","","<p>plaid-ruby <img src=\"https://circleci.com/gh/plaid/plaid-ruby.svg?style=svg&circle-token=30ee002ac2021da5b5b5a701d45fe2888af124a5\"> …\n"]]}}